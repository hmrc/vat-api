# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName = vat-api

appUrl = "http://vat-api.service"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret = "EJL72TUDste2H4RGS27OFrjCKoGPe6uWFQKUIckeg4YIrJYPISAOUMb5GxcGMxr0"

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = uk.gov.hmrc.vatapi.config.MicroserviceGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.play.health.AdminController = {
    needsHeaderValidation = false
    needsLogging = false
    needsAuditing = false
    needsTaxYear = false
  }

  uk.gov.hmrc.vatapi.controllers.definition.DocumentationController = {
    needsHeaderValidation = false
    needsLogging = false
    needsAuditing = false
    needsTaxYear = false
    needsAuth = false
  }

  uk.gov.hmrc.vatapi.resources.ObligationsResource = {
    needsLogging = true
    needsAuditing = true
    needsAuth = false
  }

  uk.gov.hmrc.vatapi.resources.VatReturnsResource = {
    needsLogging = true
    needsAuditing = true
    needsAuth = false
  }

  uk.gov.hmrc.vatapi.resources.FinancialDataResource = {
    needsLogging = true
    needsAuditing = false
    needsAuth = false
  }

}


wiremock-port = 22222
wiremock-port = ${?WIREMOCK_PORT}


# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

# The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
api.gateway.context = "organisations/vat"

# The status of the API for the API Platform.
api.status = "ALPHA"

# Custom header whitelisting
httpHeadersWhitelist = ["Gov-Test-Scenario"]

# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

Dev {

  enrolments {
    key: "HMRC-MTD-VAT"
    identifier: "VRN"
    authRule: "mtd-vat-auth"
  }

  access-keys {
    xApiKey: "dummy-api-key"
  }

  auditing {
    enabled = true
    traceRequests = false

    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

  microservice {
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = false
      }
    }

    services {

      auth {
        host = localhost
        port = 8500
        enabled = true
      }

      datastream {
        host = localhost
        port = 8100
        enabled = false
      }

      service-locator {
        host = localhost
        port = 9602
        enabled = false
      }

      des {
        host = localhost
        port = 9668
        env = none
        token = secret
      }

      non-repudiation {
        host = localhost
        port = 9768
      }
    }
  }

  feature-switch {
    white-list {
      enabled = false
      applicationIds = []
    }

    client-agent-simulation {
      enabled = true
    }

    auth {
      enabled = true
    }

    des {
      hybrid = false
    }
  }

  mtd-date = "2016-04-06"
}

Test {

  enrolments {
    key: "HMRC-MTD-VAT"
    identifier: "VRN"
    authRule: "mtd-vat-auth"
  }

  access-keys {
    xApiKey: "dummy-api-key"
  }

  auditing {
    enabled = false
    traceRequests = false
    consumer {
      baseUri {
        host = localhost
        port = ${wiremock-port}
      }
    }
  }


  microservice {
    services {

      datastream {
        host = "localhost"
        port = ${wiremock-port}
        enabled = false
      }

      auth {
        host = "localhost"
        port = ${wiremock-port}
        enabled = false
      }

      service-locator {
        host = "localhost"
        port = ${wiremock-port}
        enabled = false
      }

      des {
        host = "localhost"
        port = ${wiremock-port}
        env = ""
        token = ""
      }
      non-repudiation {
        host = "localhost"
        port = ${wiremock-port}
      }
    }
  }

  feature-switch {
    white-list {
      enabled = false
      applicationIds = []
    }

    client-agent-simulation {
      enabled = true
    }

    auth {
      enabled = true
    }

    des {
      hybrid = false
    }
  }

  mtd-date = "2016-04-06"
}